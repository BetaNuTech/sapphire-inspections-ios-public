//
//  SparklePaintCode.swift
//  Sparkle
//
//  Created on 2/15/19.
//  Copyright Â© 2019 Bluestone Properties. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class SparklePaintCode : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawSideMenuBackground(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 58, height: 156), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 58, height: 156), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 58, y: resizedFrame.height / 156)


        //// Color Declarations
        let fillColor = UIColor(red: 0.189, green: 0.411, blue: 0.567, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.085, green: 0.282, blue: 0.448, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.064, green: 0.249, blue: 0.418, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.048, green: 0.186, blue: 0.349, alpha: 1.000)
        let fillColor5 = UIColor(red: 0.104, green: 0.308, blue: 0.473, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.068, green: 0.225, blue: 0.391, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.042, green: 0.151, blue: 0.310, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.058, green: 0.211, blue: 0.376, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.047, green: 0.160, blue: 0.319, alpha: 1.000)

        //// Background Pattern Group
        //// Group 2
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 0, y: 77.4, width: 58.1, height: 78.45))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 59.64, y: 113.33))
        bezierPath.addLine(to: CGPoint(x: 59.64, y: 72.01))
        bezierPath.addLine(to: CGPoint(x: 59.72, y: 72.01))
        bezierPath.addLine(to: CGPoint(x: 59.72, y: 113.24))
        bezierPath.addLine(to: CGPoint(x: 59.64, y: 113.33))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 16.24, y: 161.6))
        bezierPath.addLine(to: CGPoint(x: 14.11, y: 160.78))
        bezierPath.addLine(to: CGPoint(x: 28.54, y: 131.81))
        bezierPath.addLine(to: CGPoint(x: 33.76, y: 142.12))
        bezierPath.addLine(to: CGPoint(x: 16.24, y: 161.6))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 40.06, y: 170.67))
        bezier2Path.addLine(to: CGPoint(x: 16.24, y: 161.6))
        bezier2Path.addLine(to: CGPoint(x: 33.76, y: 142.12))
        bezier2Path.addLine(to: CGPoint(x: 46.74, y: 167.74))
        bezier2Path.addLine(to: CGPoint(x: 40.06, y: 170.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 59.72, y: 184.53))
        bezier2Path.addLine(to: CGPoint(x: 59.64, y: 184.53))
        bezier2Path.addLine(to: CGPoint(x: 59.64, y: 113.33))
        bezier2Path.addLine(to: CGPoint(x: 59.72, y: 113.24))
        bezier2Path.addLine(to: CGPoint(x: 59.72, y: 184.53))
        bezier2Path.close()
        fillColor2.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 10.54, y: 167.95))
        bezier3Path.addLine(to: CGPoint(x: 14.11, y: 160.78))
        bezier3Path.addLine(to: CGPoint(x: 16.24, y: 161.6))
        bezier3Path.addLine(to: CGPoint(x: 10.54, y: 167.95))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: -1.3, y: 181.11))
        bezier3Path.addLine(to: CGPoint(x: -1.3, y: 154.91))
        bezier3Path.addLine(to: CGPoint(x: -1.3, y: 160.46))
        bezier3Path.addLine(to: CGPoint(x: -1.3, y: 157.84))
        bezier3Path.addLine(to: CGPoint(x: -1.3, y: 181.11))
        bezier3Path.close()
        fillColor3.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 14.11, y: 160.78))
        bezier4Path.addLine(to: CGPoint(x: -0.44, y: 155.24))
        bezier4Path.addLine(to: CGPoint(x: 15.74, y: 106.55))
        bezier4Path.addLine(to: CGPoint(x: 28.54, y: 131.81))
        bezier4Path.addLine(to: CGPoint(x: 14.11, y: 160.78))
        bezier4Path.close()
        fillColor2.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -1.3, y: 181.11))
        bezier5Path.addLine(to: CGPoint(x: -1.3, y: 157.84))
        bezier5Path.addLine(to: CGPoint(x: -0.44, y: 155.24))
        bezier5Path.addLine(to: CGPoint(x: 14.11, y: 160.78))
        bezier5Path.addLine(to: CGPoint(x: 10.54, y: 167.95))
        bezier5Path.addLine(to: CGPoint(x: -1.3, y: 181.11))
        bezier5Path.close()
        fillColor4.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: -0.44, y: 155.24))
        bezier6Path.addLine(to: CGPoint(x: -1.3, y: 154.91))
        bezier6Path.addLine(to: CGPoint(x: -1.3, y: 72.92))
        bezier6Path.addLine(to: CGPoint(x: 15.74, y: 106.56))
        bezier6Path.addLine(to: CGPoint(x: -0.44, y: 155.24))
        bezier6Path.close()
        fillColor4.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -1.3, y: 72.92))
        bezier7Path.addLine(to: CGPoint(x: -1.3, y: 72))
        bezier7Path.addLine(to: CGPoint(x: -1.3, y: 72.24))
        bezier7Path.addLine(to: CGPoint(x: -1.3, y: 72.92))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 59.56, y: 113.42))
        bezier7Path.addLine(to: CGPoint(x: 59.56, y: 72))
        bezier7Path.addLine(to: CGPoint(x: 59.64, y: 72))
        bezier7Path.addLine(to: CGPoint(x: 59.64, y: 113.33))
        bezier7Path.addLine(to: CGPoint(x: 59.56, y: 113.42))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 33.76, y: 142.12))
        bezier7Path.addLine(to: CGPoint(x: 28.54, y: 131.81))
        bezier7Path.addLine(to: CGPoint(x: 42.44, y: 103.91))
        bezier7Path.addLine(to: CGPoint(x: 50.13, y: 123.9))
        bezier7Path.addLine(to: CGPoint(x: 33.76, y: 142.12))
        bezier7Path.close()
        fillColor5.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 59.64, y: 184.52))
        bezier8Path.addLine(to: CGPoint(x: 59.18, y: 184.52))
        bezier8Path.addLine(to: CGPoint(x: 59.1, y: 162.32))
        bezier8Path.addLine(to: CGPoint(x: 46.74, y: 167.74))
        bezier8Path.addLine(to: CGPoint(x: 33.76, y: 142.12))
        bezier8Path.addLine(to: CGPoint(x: 50.13, y: 123.9))
        bezier8Path.addLine(to: CGPoint(x: 59.56, y: 148.4))
        bezier8Path.addLine(to: CGPoint(x: 59.56, y: 160.02))
        bezier8Path.addLine(to: CGPoint(x: 59.56, y: 113.42))
        bezier8Path.addLine(to: CGPoint(x: 59.64, y: 113.33))
        bezier8Path.addLine(to: CGPoint(x: 59.64, y: 184.52))
        bezier8Path.close()
        fillColor6.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 28.54, y: 131.81))
        bezier9Path.addLine(to: CGPoint(x: 15.74, y: 106.56))
        bezier9Path.addLine(to: CGPoint(x: 27.08, y: 72.44))
        bezier9Path.addLine(to: CGPoint(x: -1.3, y: 72.24))
        bezier9Path.addLine(to: CGPoint(x: -1.3, y: 72))
        bezier9Path.addLine(to: CGPoint(x: 30.16, y: 72))
        bezier9Path.addLine(to: CGPoint(x: 42.44, y: 103.91))
        bezier9Path.addLine(to: CGPoint(x: 28.54, y: 131.81))
        bezier9Path.close()
        fillColor6.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 15.74, y: 106.56))
        bezier10Path.addLine(to: CGPoint(x: -1.3, y: 72.92))
        bezier10Path.addLine(to: CGPoint(x: -1.3, y: 72.24))
        bezier10Path.addLine(to: CGPoint(x: 27.08, y: 72.44))
        bezier10Path.addLine(to: CGPoint(x: 15.74, y: 106.56))
        bezier10Path.close()
        fillColor7.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 50.13, y: 123.9))
        bezier11Path.addLine(to: CGPoint(x: 42.44, y: 103.91))
        bezier11Path.addLine(to: CGPoint(x: 58.33, y: 72.01))
        bezier11Path.addLine(to: CGPoint(x: 59.56, y: 72.01))
        bezier11Path.addLine(to: CGPoint(x: 59.56, y: 113.42))
        bezier11Path.addLine(to: CGPoint(x: 50.13, y: 123.9))
        bezier11Path.close()
        fillColor8.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 59.56, y: 148.4))
        bezier12Path.addLine(to: CGPoint(x: 50.13, y: 123.9))
        bezier12Path.addLine(to: CGPoint(x: 59.56, y: 113.42))
        bezier12Path.addLine(to: CGPoint(x: 59.56, y: 148.4))
        bezier12Path.close()
        fillColor9.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 42.44, y: 103.91))
        bezier13Path.addLine(to: CGPoint(x: 30.16, y: 72))
        bezier13Path.addLine(to: CGPoint(x: 58.33, y: 72))
        bezier13Path.addLine(to: CGPoint(x: 42.44, y: 103.91))
        bezier13Path.close()
        fillColor9.setFill()
        bezier13Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Group 3
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 2
        let clip2Path = UIBezierPath(rect: CGRect(x: 0, y: -0, width: 58.1, height: 77.45))
        clip2Path.addClip()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 59.64, y: 41.96))
        bezier14Path.addLine(to: CGPoint(x: 59.72, y: 42.05))
        bezier14Path.addLine(to: CGPoint(x: 59.72, y: 82.76))
        bezier14Path.addLine(to: CGPoint(x: 59.64, y: 82.76))
        bezier14Path.addLine(to: CGPoint(x: 59.64, y: 41.96))
        bezier14Path.close()
        bezier14Path.move(to: CGPoint(x: 16.24, y: -5.69))
        bezier14Path.addLine(to: CGPoint(x: 33.76, y: 13.54))
        bezier14Path.addLine(to: CGPoint(x: 28.54, y: 23.71))
        bezier14Path.addLine(to: CGPoint(x: 14.11, y: -4.89))
        bezier14Path.addLine(to: CGPoint(x: 16.24, y: -5.69))
        bezier14Path.close()
        fillColor.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 40.06, y: -14.65))
        bezier15Path.addLine(to: CGPoint(x: 46.74, y: -11.76))
        bezier15Path.addLine(to: CGPoint(x: 33.76, y: 13.54))
        bezier15Path.addLine(to: CGPoint(x: 16.24, y: -5.69))
        bezier15Path.addLine(to: CGPoint(x: 40.06, y: -14.65))
        bezier15Path.close()
        bezier15Path.move(to: CGPoint(x: 59.72, y: -28.33))
        bezier15Path.addLine(to: CGPoint(x: 59.72, y: 42.05))
        bezier15Path.addLine(to: CGPoint(x: 59.64, y: 41.96))
        bezier15Path.addLine(to: CGPoint(x: 59.64, y: -28.33))
        bezier15Path.addLine(to: CGPoint(x: 59.72, y: -28.33))
        bezier15Path.close()
        fillColor2.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 10.54, y: -11.96))
        bezier16Path.addLine(to: CGPoint(x: 16.24, y: -5.69))
        bezier16Path.addLine(to: CGPoint(x: 14.11, y: -4.89))
        bezier16Path.addLine(to: CGPoint(x: 10.54, y: -11.96))
        bezier16Path.close()
        bezier16Path.move(to: CGPoint(x: -1.3, y: -24.96))
        bezier16Path.addLine(to: CGPoint(x: -1.3, y: -1.98))
        bezier16Path.addLine(to: CGPoint(x: -1.3, y: -4.57))
        bezier16Path.addLine(to: CGPoint(x: -1.3, y: 0.91))
        bezier16Path.addLine(to: CGPoint(x: -1.3, y: -24.96))
        bezier16Path.close()
        fillColor3.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 14.11, y: -4.89))
        bezier17Path.addLine(to: CGPoint(x: -0.44, y: 0.58))
        bezier17Path.addLine(to: CGPoint(x: 15.74, y: 48.65))
        bezier17Path.addLine(to: CGPoint(x: 28.54, y: 23.71))
        bezier17Path.addLine(to: CGPoint(x: 14.11, y: -4.89))
        bezier17Path.close()
        fillColor2.setFill()
        bezier17Path.fill()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: -1.3, y: -24.96))
        bezier18Path.addLine(to: CGPoint(x: -1.3, y: -1.98))
        bezier18Path.addLine(to: CGPoint(x: -0.44, y: 0.58))
        bezier18Path.addLine(to: CGPoint(x: 14.11, y: -4.89))
        bezier18Path.addLine(to: CGPoint(x: 10.54, y: -11.96))
        bezier18Path.addLine(to: CGPoint(x: -1.3, y: -24.96))
        bezier18Path.close()
        fillColor4.setFill()
        bezier18Path.fill()


        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: -0.44, y: 0.58))
        bezier19Path.addLine(to: CGPoint(x: -1.3, y: 0.91))
        bezier19Path.addLine(to: CGPoint(x: -1.3, y: 81.85))
        bezier19Path.addLine(to: CGPoint(x: 15.74, y: 48.65))
        bezier19Path.addLine(to: CGPoint(x: -0.44, y: 0.58))
        bezier19Path.close()
        fillColor4.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: -1.3, y: 81.85))
        bezier20Path.addLine(to: CGPoint(x: -1.3, y: 82.53))
        bezier20Path.addLine(to: CGPoint(x: -1.3, y: 82.76))
        bezier20Path.addLine(to: CGPoint(x: -1.3, y: 81.85))
        bezier20Path.close()
        bezier20Path.move(to: CGPoint(x: 59.56, y: 41.87))
        bezier20Path.addLine(to: CGPoint(x: 59.64, y: 41.96))
        bezier20Path.addLine(to: CGPoint(x: 59.64, y: 82.76))
        bezier20Path.addLine(to: CGPoint(x: 59.56, y: 82.76))
        bezier20Path.addLine(to: CGPoint(x: 59.56, y: 41.87))
        bezier20Path.close()
        bezier20Path.move(to: CGPoint(x: 33.76, y: 13.54))
        bezier20Path.addLine(to: CGPoint(x: 50.13, y: 31.52))
        bezier20Path.addLine(to: CGPoint(x: 42.44, y: 51.26))
        bezier20Path.addLine(to: CGPoint(x: 28.54, y: 23.71))
        bezier20Path.addLine(to: CGPoint(x: 33.76, y: 13.54))
        bezier20Path.close()
        fillColor5.setFill()
        bezier20Path.fill()


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 59.64, y: -28.33))
        bezier21Path.addLine(to: CGPoint(x: 59.18, y: -28.33))
        bezier21Path.addLine(to: CGPoint(x: 59.1, y: -6.4))
        bezier21Path.addLine(to: CGPoint(x: 46.74, y: -11.76))
        bezier21Path.addLine(to: CGPoint(x: 33.76, y: 13.54))
        bezier21Path.addLine(to: CGPoint(x: 50.13, y: 31.52))
        bezier21Path.addLine(to: CGPoint(x: 59.56, y: 7.34))
        bezier21Path.addLine(to: CGPoint(x: 59.56, y: -4.14))
        bezier21Path.addLine(to: CGPoint(x: 59.56, y: 7.34))
        bezier21Path.addLine(to: CGPoint(x: 59.56, y: 41.87))
        bezier21Path.addLine(to: CGPoint(x: 59.64, y: 41.96))
        bezier21Path.addLine(to: CGPoint(x: 59.64, y: -28.33))
        bezier21Path.close()
        fillColor6.setFill()
        bezier21Path.fill()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 28.54, y: 23.71))
        bezier22Path.addLine(to: CGPoint(x: 15.74, y: 48.65))
        bezier22Path.addLine(to: CGPoint(x: 27.08, y: 82.33))
        bezier22Path.addLine(to: CGPoint(x: -1.3, y: 82.53))
        bezier22Path.addLine(to: CGPoint(x: -1.3, y: 82.76))
        bezier22Path.addLine(to: CGPoint(x: 30.16, y: 82.76))
        bezier22Path.addLine(to: CGPoint(x: 42.44, y: 51.26))
        bezier22Path.addLine(to: CGPoint(x: 28.54, y: 23.71))
        bezier22Path.close()
        fillColor6.setFill()
        bezier22Path.fill()


        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 15.74, y: 48.65))
        bezier23Path.addLine(to: CGPoint(x: -1.3, y: 81.85))
        bezier23Path.addLine(to: CGPoint(x: -1.3, y: 82.53))
        bezier23Path.addLine(to: CGPoint(x: 27.08, y: 82.33))
        bezier23Path.addLine(to: CGPoint(x: 15.74, y: 48.65))
        bezier23Path.close()
        fillColor7.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 50.13, y: 31.52))
        bezier24Path.addLine(to: CGPoint(x: 42.44, y: 51.26))
        bezier24Path.addLine(to: CGPoint(x: 58.33, y: 82.76))
        bezier24Path.addLine(to: CGPoint(x: 59.56, y: 82.76))
        bezier24Path.addLine(to: CGPoint(x: 59.56, y: 41.87))
        bezier24Path.addLine(to: CGPoint(x: 50.13, y: 31.52))
        bezier24Path.close()
        fillColor8.setFill()
        bezier24Path.fill()


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 59.56, y: 7.34))
        bezier25Path.addLine(to: CGPoint(x: 50.13, y: 31.52))
        bezier25Path.addLine(to: CGPoint(x: 59.56, y: 41.87))
        bezier25Path.addLine(to: CGPoint(x: 59.56, y: 7.34))
        bezier25Path.close()
        fillColor9.setFill()
        bezier25Path.fill()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 42.44, y: 51.26))
        bezier26Path.addLine(to: CGPoint(x: 30.16, y: 82.76))
        bezier26Path.addLine(to: CGPoint(x: 58.33, y: 82.76))
        bezier26Path.addLine(to: CGPoint(x: 42.44, y: 51.26))
        bezier26Path.close()
        fillColor9.setFill()
        bezier26Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLoginBackground(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 175, height: 230), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 175, height: 230), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 175, y: resizedFrame.height / 230)


        //// Color Declarations
        let fillColor10 = UIColor(red: 0.159, green: 0.441, blue: 0.637, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.000, green: 0.322, blue: 0.535, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.000, green: 0.289, blue: 0.506, alpha: 1.000)
        let fillColor13 = UIColor(red: 0.000, green: 0.219, blue: 0.441, alpha: 1.000)
        let fillColor14 = UIColor(red: 0.033, green: 0.346, blue: 0.556, alpha: 1.000)
        let fillColor15 = UIColor(red: 0.000, green: 0.262, blue: 0.480, alpha: 1.000)
        let fillColor16 = UIColor(red: 0.000, green: 0.177, blue: 0.402, alpha: 1.000)
        let fillColor17 = UIColor(red: 0.000, green: 0.247, blue: 0.466, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.000, green: 0.188, blue: 0.412, alpha: 1.000)
        let fillColor19 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Background Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -0.66, y: 141.61))
        bezierPath.addLine(to: CGPoint(x: -0.66, y: 141.75))
        bezierPath.addLine(to: CGPoint(x: 80.23, y: 141.74))
        bezierPath.addLine(to: CGPoint(x: 80.03, y: 141.6))
        bezierPath.addLine(to: CGPoint(x: -0.66, y: 141.61))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 121.66, y: 199.57))
        bezierPath.addLine(to: CGPoint(x: 175.67, y: 221.82))
        bezierPath.addLine(to: CGPoint(x: 175.7, y: 212.8))
        bezierPath.addLine(to: CGPoint(x: 144.88, y: 189.86))
        bezierPath.addLine(to: CGPoint(x: 121.66, y: 199.57))
        bezierPath.close()
        fillColor10.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 80.03, y: 141.6))
        bezier2Path.addLine(to: CGPoint(x: 80.23, y: 141.74))
        bezier2Path.addLine(to: CGPoint(x: 175.92, y: 141.73))
        bezier2Path.addLine(to: CGPoint(x: 175.92, y: 141.59))
        bezier2Path.addLine(to: CGPoint(x: 80.03, y: 141.6))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 144.88, y: 189.86))
        bezier2Path.addLine(to: CGPoint(x: 175.7, y: 212.8))
        bezier2Path.addLine(to: CGPoint(x: 175.81, y: 176.93))
        bezier2Path.addLine(to: CGPoint(x: 144.88, y: 189.86))
        bezier2Path.close()
        fillColor11.setFill()
        bezier2Path.fill()


        //// Group 2
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: -87.3, y: -49.3, width: 174.6, height: 98.6))
        var clipTransformation = CGAffineTransform.identity
        clipTransformation = clipTransformation.translatedBy(x: 86.49, y: 191.34)
        clipTransformation = clipTransformation.rotated(by: 0.2 * CGFloat.pi/180)
        clipPath.apply(clipTransformation)
        clipPath.addClip()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 200.58, y: 233.72))
        bezier3Path.addLine(to: CGPoint(x: 184.66, y: 227.66))
        bezier3Path.addLine(to: CGPoint(x: 186.49, y: 224.03))
        bezier3Path.addLine(to: CGPoint(x: 200.58, y: 233.72))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 229.82, y: 253.81))
        bezier3Path.addLine(to: CGPoint(x: 171.51, y: 253.81))
        bezier3Path.addLine(to: CGPoint(x: 183.85, y: 253.81))
        bezier3Path.addLine(to: CGPoint(x: 178.02, y: 253.81))
        bezier3Path.addLine(to: CGPoint(x: 229.82, y: 253.81))
        bezier3Path.close()
        fillColor12.setFill()
        bezier3Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 64.73, y: 223.37))
        bezier4Path.addLine(to: CGPoint(x: 127.46, y: 240.6))
        bezier4Path.addLine(to: CGPoint(x: 175.61, y: 240.59))
        bezier4Path.addLine(to: CGPoint(x: 175.67, y: 221.82))
        bezier4Path.addLine(to: CGPoint(x: 121.66, y: 199.57))
        bezier4Path.addLine(to: CGPoint(x: 64.73, y: 223.37))
        bezier4Path.close()
        fillColor11.setFill()
        bezier4Path.fill()


        //// Group 3
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 2
        let clip2Path = UIBezierPath(rect: CGRect(x: -87.3, y: -49.3, width: 174.6, height: 98.6))
        var clip2Transformation = CGAffineTransform.identity
        clip2Transformation = clip2Transformation.translatedBy(x: 86.49, y: 191.34)
        clip2Transformation = clip2Transformation.rotated(by: 0.2 * CGFloat.pi/180)
        clip2Path.apply(clip2Transformation)
        clip2Path.addClip()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 229.82, y: 253.81))
        bezier5Path.addLine(to: CGPoint(x: 178.02, y: 253.81))
        bezier5Path.addLine(to: CGPoint(x: 172.25, y: 252.35))
        bezier5Path.addLine(to: CGPoint(x: 184.66, y: 227.66))
        bezier5Path.addLine(to: CGPoint(x: 200.58, y: 233.72))
        bezier5Path.addLine(to: CGPoint(x: 229.82, y: 253.81))
        bezier5Path.close()
        fillColor13.setFill()
        bezier5Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 23.49, y: 240.61))
        bezier6Path.addLine(to: CGPoint(x: 127.46, y: 240.6))
        bezier6Path.addLine(to: CGPoint(x: 64.73, y: 223.37))
        bezier6Path.addLine(to: CGPoint(x: 23.49, y: 240.61))
        bezier6Path.close()
        fillColor13.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -0.66, y: 141.75))
        bezier7Path.addLine(to: CGPoint(x: -0.66, y: 141.91))
        bezier7Path.addLine(to: CGPoint(x: 80.43, y: 141.89))
        bezier7Path.addLine(to: CGPoint(x: 80.23, y: 141.74))
        bezier7Path.addLine(to: CGPoint(x: -0.66, y: 141.75))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 58.92, y: 173.73))
        bezier7Path.addLine(to: CGPoint(x: 121.66, y: 199.57))
        bezier7Path.addLine(to: CGPoint(x: 144.88, y: 189.86))
        bezier7Path.addLine(to: CGPoint(x: 103.97, y: 159.42))
        bezier7Path.addLine(to: CGPoint(x: 58.92, y: 173.73))
        bezier7Path.close()
        fillColor14.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 80.23, y: 141.74))
        bezier8Path.addLine(to: CGPoint(x: 80.43, y: 141.89))
        bezier8Path.addLine(to: CGPoint(x: 159.17, y: 141.88))
        bezier8Path.addLine(to: CGPoint(x: 175.92, y: 141.88))
        bezier8Path.addLine(to: CGPoint(x: 175.92, y: 141.73))
        bezier8Path.addLine(to: CGPoint(x: 80.23, y: 141.74))
        bezier8Path.close()
        bezier8Path.move(to: CGPoint(x: 159.17, y: 141.88))
        bezier8Path.addLine(to: CGPoint(x: 103.97, y: 159.42))
        bezier8Path.addLine(to: CGPoint(x: 144.88, y: 189.86))
        bezier8Path.addLine(to: CGPoint(x: 175.81, y: 176.93))
        bezier8Path.addLine(to: CGPoint(x: 175.92, y: 141.88))
        bezier8Path.addLine(to: CGPoint(x: 159.17, y: 141.88))
        bezier8Path.close()
        fillColor15.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: -0.82, y: 192.71))
        bezier9Path.addLine(to: CGPoint(x: -0.86, y: 205.37))
        bezier9Path.addLine(to: CGPoint(x: 64.72, y: 223.37))
        bezier9Path.addLine(to: CGPoint(x: 121.66, y: 199.57))
        bezier9Path.addLine(to: CGPoint(x: 58.92, y: 173.73))
        bezier9Path.addLine(to: CGPoint(x: -0.82, y: 192.71))
        bezier9Path.close()
        fillColor15.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: -0.97, y: 240.62))
        bezier10Path.addLine(to: CGPoint(x: 23.49, y: 240.61))
        bezier10Path.addLine(to: CGPoint(x: 64.72, y: 223.37))
        bezier10Path.addLine(to: CGPoint(x: -0.86, y: 205.37))
        bezier10Path.addLine(to: CGPoint(x: -0.97, y: 240.62))
        bezier10Path.close()
        fillColor16.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: -0.66, y: 141.91))
        bezier11Path.addLine(to: CGPoint(x: -0.69, y: 149.18))
        bezier11Path.addLine(to: CGPoint(x: 58.92, y: 173.73))
        bezier11Path.addLine(to: CGPoint(x: 103.97, y: 159.42))
        bezier11Path.addLine(to: CGPoint(x: 80.43, y: 141.89))
        bezier11Path.addLine(to: CGPoint(x: -0.66, y: 141.91))
        bezier11Path.close()
        fillColor17.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 80.43, y: 141.89))
        bezier12Path.addLine(to: CGPoint(x: 103.97, y: 159.42))
        bezier12Path.addLine(to: CGPoint(x: 159.17, y: 141.88))
        bezier12Path.addLine(to: CGPoint(x: 80.43, y: 141.89))
        bezier12Path.close()
        fillColor18.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: -0.82, y: 192.71))
        bezier13Path.addLine(to: CGPoint(x: 58.92, y: 173.73))
        bezier13Path.addLine(to: CGPoint(x: -0.69, y: 149.18))
        bezier13Path.addLine(to: CGPoint(x: -0.82, y: 192.71))
        bezier13Path.close()
        fillColor18.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: -0.64, y: 132.59))
        bezier14Path.addLine(to: CGPoint(x: -0.85, y: 201.03))
        bezier14Path.addLine(to: CGPoint(x: 176.16, y: 171.96))
        bezier14Path.addLine(to: CGPoint(x: 176.29, y: 132.56))
        bezier14Path.addLine(to: CGPoint(x: -0.64, y: 132.59))
        bezier14Path.close()
        fillColor19.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: -0.56, y: 27.2))
        bezier15Path.addLine(to: CGPoint(x: 30.17, y: 59.22))
        bezier15Path.addLine(to: CGPoint(x: 53.39, y: 45.83))
        bezier15Path.addLine(to: CGPoint(x: -0.51, y: 14.67))
        bezier15Path.addLine(to: CGPoint(x: -0.56, y: 27.2))
        bezier15Path.close()
        bezier15Path.move(to: CGPoint(x: 94.83, y: 126.57))
        bezier15Path.addLine(to: CGPoint(x: 175.43, y: 126.92))
        bezier15Path.addLine(to: CGPoint(x: 175.44, y: 126.72))
        bezier15Path.addLine(to: CGPoint(x: 94.64, y: 126.37))
        bezier15Path.addLine(to: CGPoint(x: 94.83, y: 126.57))
        bezier15Path.close()
        fillColor10.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: -0.76, y: 77.05))
        bezier16Path.addLine(to: CGPoint(x: 30.17, y: 59.22))
        bezier16Path.addLine(to: CGPoint(x: -0.56, y: 27.2))
        bezier16Path.addLine(to: CGPoint(x: -0.76, y: 77.05))
        bezier16Path.close()
        bezier16Path.move(to: CGPoint(x: -0.95, y: 126.15))
        bezier16Path.addLine(to: CGPoint(x: 94.83, y: 126.57))
        bezier16Path.addLine(to: CGPoint(x: 94.64, y: 126.37))
        bezier16Path.addLine(to: CGPoint(x: -0.95, y: 125.95))
        bezier16Path.addLine(to: CGPoint(x: -0.95, y: 126.15))
        bezier16Path.close()
        fillColor11.setFill()
        bezier16Path.fill()


        //// Group 4
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 3
        let clip3Path = UIBezierPath(rect: CGRect(x: -0.71, y: -11.06, width: 176.4, height: 159))
        clip3Path.addClip()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: -27.67, y: -0.47))
        bezier17Path.addLine(to: CGPoint(x: -11.6, y: 9.37))
        bezier17Path.addLine(to: CGPoint(x: -13.45, y: 15.22))
        bezier17Path.addLine(to: CGPoint(x: -27.67, y: -0.47))
        bezier17Path.close()
        bezier17Path.move(to: CGPoint(x: -57.16, y: -33.01))
        bezier17Path.addLine(to: CGPoint(x: 1.75, y: -32.73))
        bezier17Path.addLine(to: CGPoint(x: -10.71, y: -32.79))
        bezier17Path.addLine(to: CGPoint(x: -4.83, y: -32.76))
        bezier17Path.addLine(to: CGPoint(x: -57.16, y: -33.01))
        bezier17Path.close()
        fillColor12.setFill()
        bezier17Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: -0.51, y: 14.67))
        bezier18Path.addLine(to: CGPoint(x: 53.39, y: 45.83))
        bezier18Path.addLine(to: CGPoint(x: 110.31, y: 13.02))
        bezier18Path.addLine(to: CGPoint(x: 47.69, y: -11.2))
        bezier18Path.addLine(to: CGPoint(x: -0.41, y: -11.41))
        bezier18Path.addLine(to: CGPoint(x: -0.51, y: 14.67))
        bezier18Path.close()
        fillColor11.setFill()
        bezier18Path.fill()


        //// Group 5
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip 4
        let clip4Path = UIBezierPath(rect: CGRect(x: -0.71, y: -11.06, width: 176.4, height: 159))
        clip4Path.addClip()


        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: -57.16, y: -33))
        bezier19Path.addLine(to: CGPoint(x: -4.83, y: -32.76))
        bezier19Path.addLine(to: CGPoint(x: 1, y: -30.37))
        bezier19Path.addLine(to: CGPoint(x: -11.6, y: 9.37))
        bezier19Path.addLine(to: CGPoint(x: -27.67, y: -0.47))
        bezier19Path.addLine(to: CGPoint(x: -57.16, y: -33))
        bezier19Path.close()
        fillColor13.setFill()
        bezier19Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 110.31, y: 13.02))
        bezier20Path.addLine(to: CGPoint(x: 151.54, y: -10.75))
        bezier20Path.addLine(to: CGPoint(x: 47.69, y: -11.2))
        bezier20Path.addLine(to: CGPoint(x: 110.31, y: 13.02))
        bezier20Path.close()
        fillColor13.setFill()
        bezier20Path.fill()


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 30.17, y: 59.22))
        bezier21Path.addLine(to: CGPoint(x: 70.96, y: 101.7))
        bezier21Path.addLine(to: CGPoint(x: 115.99, y: 82.02))
        bezier21Path.addLine(to: CGPoint(x: 53.39, y: 45.83))
        bezier21Path.addLine(to: CGPoint(x: 30.17, y: 59.22))
        bezier21Path.close()
        bezier21Path.move(to: CGPoint(x: 94.64, y: 126.37))
        bezier21Path.addLine(to: CGPoint(x: 175.44, y: 126.72))
        bezier21Path.addLine(to: CGPoint(x: 175.44, y: 126.51))
        bezier21Path.addLine(to: CGPoint(x: 94.43, y: 126.16))
        bezier21Path.addLine(to: CGPoint(x: 94.64, y: 126.37))
        bezier21Path.close()
        fillColor14.setFill()
        bezier21Path.fill()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: -0.76, y: 77.05))
        bezier22Path.addLine(to: CGPoint(x: -0.95, y: 125.95))
        bezier22Path.addLine(to: CGPoint(x: 94.64, y: 126.37))
        bezier22Path.addLine(to: CGPoint(x: 94.43, y: 126.16))
        bezier22Path.addLine(to: CGPoint(x: 15.79, y: 125.81))
        bezier22Path.addLine(to: CGPoint(x: 70.96, y: 101.7))
        bezier22Path.addLine(to: CGPoint(x: 30.17, y: 59.22))
        bezier22Path.addLine(to: CGPoint(x: -0.76, y: 77.05))
        bezier22Path.close()
        fillColor15.setFill()
        bezier22Path.fill()


        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 53.39, y: 45.83))
        bezier23Path.addLine(to: CGPoint(x: 115.99, y: 82.02))
        bezier23Path.addLine(to: CGPoint(x: 175.71, y: 55.93))
        bezier23Path.addLine(to: CGPoint(x: 175.78, y: 38.34))
        bezier23Path.addLine(to: CGPoint(x: 110.31, y: 13.02))
        bezier23Path.addLine(to: CGPoint(x: 53.39, y: 45.83))
        bezier23Path.close()
        fillColor15.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 110.31, y: 13.02))
        bezier24Path.addLine(to: CGPoint(x: 175.78, y: 38.34))
        bezier24Path.addLine(to: CGPoint(x: 175.98, y: -10.64))
        bezier24Path.addLine(to: CGPoint(x: 151.54, y: -10.75))
        bezier24Path.addLine(to: CGPoint(x: 110.31, y: 13.02))
        bezier24Path.close()
        fillColor16.setFill()
        bezier24Path.fill()


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 70.96, y: 101.7))
        bezier25Path.addLine(to: CGPoint(x: 94.43, y: 126.16))
        bezier25Path.addLine(to: CGPoint(x: 175.44, y: 126.51))
        bezier25Path.addLine(to: CGPoint(x: 175.48, y: 116.41))
        bezier25Path.addLine(to: CGPoint(x: 115.99, y: 82.02))
        bezier25Path.addLine(to: CGPoint(x: 70.96, y: 101.7))
        bezier25Path.close()
        fillColor17.setFill()
        bezier25Path.fill()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 15.79, y: 125.81))
        bezier26Path.addLine(to: CGPoint(x: 94.43, y: 126.16))
        bezier26Path.addLine(to: CGPoint(x: 70.96, y: 101.7))
        bezier26Path.addLine(to: CGPoint(x: 15.79, y: 125.81))
        bezier26Path.close()
        fillColor18.setFill()
        bezier26Path.fill()


        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 115.99, y: 82.02))
        bezier27Path.addLine(to: CGPoint(x: 175.48, y: 116.41))
        bezier27Path.addLine(to: CGPoint(x: 175.71, y: 55.93))
        bezier27Path.addLine(to: CGPoint(x: 115.99, y: 82.02))
        bezier27Path.close()
        fillColor18.setFill()
        bezier27Path.fill()


        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: -0.78, y: 83.95))
        bezier28Path.addLine(to: CGPoint(x: -1, y: 138.69))
        bezier28Path.addLine(to: CGPoint(x: 175.91, y: 139.46))
        bezier28Path.addLine(to: CGPoint(x: 176.29, y: 44.36))
        bezier28Path.addLine(to: CGPoint(x: -0.78, y: 83.95))
        bezier28Path.close()
        fillColor19.setFill()
        bezier28Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawHeader(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 74, height: 17), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 74, height: 17), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 74, y: resizedFrame.height / 17)


        //// Color Declarations
        let fillColor10 = UIColor(red: 0.159, green: 0.441, blue: 0.637, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.000, green: 0.322, blue: 0.535, alpha: 1.000)
        let fillColor13 = UIColor(red: 0.000, green: 0.219, blue: 0.441, alpha: 1.000)
        let fillColor14 = UIColor(red: 0.033, green: 0.346, blue: 0.556, alpha: 1.000)
        let fillColor15 = UIColor(red: 0.000, green: 0.262, blue: 0.480, alpha: 1.000)
        let fillColor16 = UIColor(red: 0.000, green: 0.177, blue: 0.402, alpha: 1.000)
        let fillColor17 = UIColor(red: 0.000, green: 0.247, blue: 0.466, alpha: 1.000)
        let fillColor18 = UIColor(red: 0.000, green: 0.188, blue: 0.412, alpha: 1.000)

        //// Background Header Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 32.91, y: -0.15))
        bezierPath.addLine(to: CGPoint(x: 20.17, y: 1.81))
        bezierPath.addLine(to: CGPoint(x: 28.91, y: 4.19))
        bezierPath.addLine(to: CGPoint(x: 44.57, y: -0.15))
        bezierPath.addLine(to: CGPoint(x: 32.91, y: -0.15))
        bezierPath.close()
        fillColor10.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 12.99, y: -0.15))
        bezier2Path.addLine(to: CGPoint(x: 20.17, y: 1.81))
        bezier2Path.addLine(to: CGPoint(x: 32.91, y: -0.15))
        bezier2Path.addLine(to: CGPoint(x: 12.99, y: -0.15))
        bezier2Path.close()
        fillColor11.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 44.57, y: -0.15))
        bezier3Path.addLine(to: CGPoint(x: 28.91, y: 4.19))
        bezier3Path.addLine(to: CGPoint(x: 50.35, y: 10.03))
        bezier3Path.addLine(to: CGPoint(x: 74.63, y: -0.06))
        bezier3Path.addLine(to: CGPoint(x: 74.63, y: -0.15))
        bezier3Path.addLine(to: CGPoint(x: 44.57, y: -0.15))
        bezier3Path.close()
        fillColor11.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 50.35, y: 10.03))
        bezier4Path.addLine(to: CGPoint(x: 74.63, y: 16.65))
        bezier4Path.addLine(to: CGPoint(x: 74.63, y: -0.06))
        bezier4Path.addLine(to: CGPoint(x: 50.35, y: 10.03))
        bezier4Path.close()
        fillColor13.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 0.14, y: 4.88))
        bezier5Path.addLine(to: CGPoint(x: 0.14, y: 8.67))
        bezier5Path.addLine(to: CGPoint(x: 5.63, y: 10.64))
        bezier5Path.addLine(to: CGPoint(x: 28.91, y: 4.19))
        bezier5Path.addLine(to: CGPoint(x: 20.17, y: 1.81))
        bezier5Path.addLine(to: CGPoint(x: 0.14, y: 4.88))
        bezier5Path.close()
        fillColor14.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 0.14, y: -0.15))
        bezier6Path.addLine(to: CGPoint(x: 0.14, y: 4.88))
        bezier6Path.addLine(to: CGPoint(x: 20.17, y: 1.81))
        bezier6Path.addLine(to: CGPoint(x: 12.99, y: -0.15))
        bezier6Path.addLine(to: CGPoint(x: 0.14, y: -0.15))
        bezier6Path.close()
        fillColor15.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 5.63, y: 10.64))
        bezier7Path.addLine(to: CGPoint(x: 23.35, y: 17))
        bezier7Path.addLine(to: CGPoint(x: 33.57, y: 17))
        bezier7Path.addLine(to: CGPoint(x: 50.35, y: 10.03))
        bezier7Path.addLine(to: CGPoint(x: 28.91, y: 4.19))
        bezier7Path.addLine(to: CGPoint(x: 5.63, y: 10.64))
        bezier7Path.close()
        fillColor15.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 33.57, y: 17))
        bezier8Path.addLine(to: CGPoint(x: 74.64, y: 17))
        bezier8Path.addLine(to: CGPoint(x: 74.64, y: 16.65))
        bezier8Path.addLine(to: CGPoint(x: 50.35, y: 10.03))
        bezier8Path.addLine(to: CGPoint(x: 33.57, y: 17))
        bezier8Path.close()
        fillColor16.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 0.14, y: 12.16))
        bezier9Path.addLine(to: CGPoint(x: 5.63, y: 10.64))
        bezier9Path.addLine(to: CGPoint(x: 0.14, y: 8.67))
        bezier9Path.addLine(to: CGPoint(x: 0.14, y: 12.16))
        bezier9Path.close()
        fillColor17.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 0.14, y: 12.16))
        bezier10Path.addLine(to: CGPoint(x: 0.14, y: 17))
        bezier10Path.addLine(to: CGPoint(x: 23.35, y: 17))
        bezier10Path.addLine(to: CGPoint(x: 5.63, y: 10.64))
        bezier10Path.addLine(to: CGPoint(x: 0.14, y: 12.16))
        bezier10Path.close()
        fillColor18.setFill()
        bezier10Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBluestoneWhiteLogo(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 57, height: 11), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 57, height: 11), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 57, y: resizedFrame.height / 11)


        //// Color Declarations
        let fillColor19 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Logo
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath(rect: CGRect(x: 0.4, y: 0.1, width: 56.25, height: 10.6))
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 14.46, y: 5.79))
        bezierPath.addCurve(to: CGPoint(x: 14.26, y: 5.81), controlPoint1: CGPoint(x: 14.4, y: 5.79), controlPoint2: CGPoint(x: 14.33, y: 5.8))
        bezierPath.addCurve(to: CGPoint(x: 13.73, y: 5.85), controlPoint1: CGPoint(x: 14.09, y: 5.83), controlPoint2: CGPoint(x: 13.91, y: 5.85))
        bezierPath.addLine(to: CGPoint(x: 13.04, y: 5.85))
        bezierPath.addLine(to: CGPoint(x: 13.04, y: 3.59))
        bezierPath.addLine(to: CGPoint(x: 13.4, y: 3.59))
        bezierPath.addCurve(to: CGPoint(x: 14.79, y: 3.81), controlPoint1: CGPoint(x: 13.99, y: 3.59), controlPoint2: CGPoint(x: 14.45, y: 3.63))
        bezierPath.addCurve(to: CGPoint(x: 15.36, y: 4.75), controlPoint1: CGPoint(x: 15.14, y: 4.01), controlPoint2: CGPoint(x: 15.36, y: 4.36))
        bezierPath.addCurve(to: CGPoint(x: 14.46, y: 5.79), controlPoint1: CGPoint(x: 15.36, y: 5.35), controlPoint2: CGPoint(x: 14.84, y: 5.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.44, y: 2.64))
        bezierPath.addCurve(to: CGPoint(x: 13.39, y: 2.86), controlPoint1: CGPoint(x: 14.21, y: 2.79), controlPoint2: CGPoint(x: 13.88, y: 2.86))
        bezierPath.addLine(to: CGPoint(x: 13.04, y: 2.86))
        bezierPath.addLine(to: CGPoint(x: 13.04, y: 1))
        bezierPath.addLine(to: CGPoint(x: 13.79, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 14.85, y: 1.84), controlPoint1: CGPoint(x: 14.46, y: 1), controlPoint2: CGPoint(x: 14.85, y: 1.31))
        bezierPath.addCurve(to: CGPoint(x: 14.44, y: 2.64), controlPoint1: CGPoint(x: 14.85, y: 2.16), controlPoint2: CGPoint(x: 14.7, y: 2.47))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.92, y: 3.12))
        bezierPath.addCurve(to: CGPoint(x: 15.63, y: 1.84), controlPoint1: CGPoint(x: 15.38, y: 2.83), controlPoint2: CGPoint(x: 15.63, y: 2.38))
        bezierPath.addCurve(to: CGPoint(x: 13.67, y: 0.27), controlPoint1: CGPoint(x: 15.63, y: 0.85), controlPoint2: CGPoint(x: 14.89, y: 0.27))
        bezierPath.addLine(to: CGPoint(x: 12.29, y: 0.27))
        bezierPath.addLine(to: CGPoint(x: 12.29, y: 6.58))
        bezierPath.addLine(to: CGPoint(x: 14.06, y: 6.58))
        bezierPath.addCurve(to: CGPoint(x: 15.6, y: 6.02), controlPoint1: CGPoint(x: 14.68, y: 6.58), controlPoint2: CGPoint(x: 15.21, y: 6.39))
        bezierPath.addCurve(to: CGPoint(x: 16.13, y: 4.74), controlPoint1: CGPoint(x: 15.94, y: 5.69), controlPoint2: CGPoint(x: 16.13, y: 5.23))
        bezierPath.addCurve(to: CGPoint(x: 14.92, y: 3.12), controlPoint1: CGPoint(x: 16.13, y: 3.98), controlPoint2: CGPoint(x: 15.73, y: 3.44))
        bezierPath.close()
        fillColor19.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 17.81, y: 0.27))
        bezier2Path.addLine(to: CGPoint(x: 17.06, y: 0.27))
        bezier2Path.addLine(to: CGPoint(x: 17.06, y: 6.58))
        bezier2Path.addLine(to: CGPoint(x: 20.18, y: 6.58))
        bezier2Path.addLine(to: CGPoint(x: 20.18, y: 5.85))
        bezier2Path.addLine(to: CGPoint(x: 17.81, y: 5.85))
        bezier2Path.addLine(to: CGPoint(x: 17.81, y: 0.27))
        bezier2Path.close()
        fillColor19.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 24.55, y: 4.26))
        bezier3Path.addCurve(to: CGPoint(x: 24.23, y: 5.54), controlPoint1: CGPoint(x: 24.55, y: 4.74), controlPoint2: CGPoint(x: 24.55, y: 5.15))
        bezier3Path.addCurve(to: CGPoint(x: 23.18, y: 6), controlPoint1: CGPoint(x: 23.98, y: 5.85), controlPoint2: CGPoint(x: 23.64, y: 6))
        bezier3Path.addCurve(to: CGPoint(x: 22.13, y: 5.54), controlPoint1: CGPoint(x: 22.72, y: 6), controlPoint2: CGPoint(x: 22.38, y: 5.85))
        bezier3Path.addCurve(to: CGPoint(x: 21.81, y: 4.26), controlPoint1: CGPoint(x: 21.81, y: 5.15), controlPoint2: CGPoint(x: 21.81, y: 4.74))
        bezier3Path.addLine(to: CGPoint(x: 21.81, y: 0.27))
        bezier3Path.addLine(to: CGPoint(x: 21.07, y: 0.27))
        bezier3Path.addLine(to: CGPoint(x: 21.07, y: 4.35))
        bezier3Path.addCurve(to: CGPoint(x: 23.18, y: 6.74), controlPoint1: CGPoint(x: 21.07, y: 5.82), controlPoint2: CGPoint(x: 21.88, y: 6.74))
        bezier3Path.addCurve(to: CGPoint(x: 25.29, y: 4.35), controlPoint1: CGPoint(x: 24.48, y: 6.74), controlPoint2: CGPoint(x: 25.29, y: 5.82))
        bezier3Path.addLine(to: CGPoint(x: 25.29, y: 0.27))
        bezier3Path.addLine(to: CGPoint(x: 24.55, y: 0.27))
        bezier3Path.addLine(to: CGPoint(x: 24.55, y: 4.26))
        bezier3Path.close()
        fillColor19.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 26.69, y: 6.58))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 6.58))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 5.85))
        bezier4Path.addLine(to: CGPoint(x: 27.44, y: 5.85))
        bezier4Path.addLine(to: CGPoint(x: 27.44, y: 3.54))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 3.54))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 2.81))
        bezier4Path.addLine(to: CGPoint(x: 27.44, y: 2.81))
        bezier4Path.addLine(to: CGPoint(x: 27.44, y: 1))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 1))
        bezier4Path.addLine(to: CGPoint(x: 30.35, y: 0.27))
        bezier4Path.addLine(to: CGPoint(x: 26.69, y: 0.27))
        bezier4Path.addLine(to: CGPoint(x: 26.69, y: 6.58))
        bezier4Path.close()
        fillColor19.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 32.65, y: 2.59))
        bezier5Path.addLine(to: CGPoint(x: 32.53, y: 2.5))
        bezier5Path.addCurve(to: CGPoint(x: 32.01, y: 1.6), controlPoint1: CGPoint(x: 32.2, y: 2.25), controlPoint2: CGPoint(x: 32.01, y: 1.92))
        bezier5Path.addCurve(to: CGPoint(x: 32.78, y: 0.87), controlPoint1: CGPoint(x: 32.01, y: 1.24), controlPoint2: CGPoint(x: 32.27, y: 0.87))
        bezier5Path.addCurve(to: CGPoint(x: 33.87, y: 1.61), controlPoint1: CGPoint(x: 33.27, y: 0.87), controlPoint2: CGPoint(x: 33.55, y: 1.19))
        bezier5Path.addLine(to: CGPoint(x: 33.91, y: 1.66))
        bezier5Path.addLine(to: CGPoint(x: 34.5, y: 1.19))
        bezier5Path.addLine(to: CGPoint(x: 34.47, y: 1.14))
        bezier5Path.addCurve(to: CGPoint(x: 32.8, y: 0.11), controlPoint1: CGPoint(x: 34.07, y: 0.61), controlPoint2: CGPoint(x: 33.6, y: 0.11))
        bezier5Path.addCurve(to: CGPoint(x: 31.23, y: 1.62), controlPoint1: CGPoint(x: 31.91, y: 0.11), controlPoint2: CGPoint(x: 31.23, y: 0.76))
        bezier5Path.addCurve(to: CGPoint(x: 31.78, y: 2.86), controlPoint1: CGPoint(x: 31.23, y: 2.09), controlPoint2: CGPoint(x: 31.47, y: 2.61))
        bezier5Path.addCurve(to: CGPoint(x: 32.36, y: 3.32), controlPoint1: CGPoint(x: 31.99, y: 3.03), controlPoint2: CGPoint(x: 32.19, y: 3.18))
        bezier5Path.addCurve(to: CGPoint(x: 33.8, y: 5.02), controlPoint1: CGPoint(x: 33.35, y: 4.11), controlPoint2: CGPoint(x: 33.8, y: 4.47))
        bezier5Path.addCurve(to: CGPoint(x: 32.72, y: 6), controlPoint1: CGPoint(x: 33.8, y: 5.57), controlPoint2: CGPoint(x: 33.33, y: 6))
        bezier5Path.addCurve(to: CGPoint(x: 31.48, y: 5.01), controlPoint1: CGPoint(x: 32.26, y: 6), controlPoint2: CGPoint(x: 31.84, y: 5.66))
        bezier5Path.addLine(to: CGPoint(x: 31.45, y: 4.95))
        bezier5Path.addLine(to: CGPoint(x: 30.82, y: 5.34))
        bezier5Path.addLine(to: CGPoint(x: 30.85, y: 5.39))
        bezier5Path.addCurve(to: CGPoint(x: 32.77, y: 6.74), controlPoint1: CGPoint(x: 31.35, y: 6.32), controlPoint2: CGPoint(x: 31.95, y: 6.74))
        bezier5Path.addCurve(to: CGPoint(x: 34.58, y: 5.01), controlPoint1: CGPoint(x: 33.77, y: 6.74), controlPoint2: CGPoint(x: 34.58, y: 5.96))
        bezier5Path.addCurve(to: CGPoint(x: 32.65, y: 2.59), controlPoint1: CGPoint(x: 34.58, y: 4.01), controlPoint2: CGPoint(x: 33.77, y: 3.42))
        bezier5Path.close()
        fillColor19.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 35.16, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 36.55, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 36.55, y: 6.58))
        bezier6Path.addLine(to: CGPoint(x: 37.3, y: 6.58))
        bezier6Path.addLine(to: CGPoint(x: 37.3, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 38.68, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 38.68, y: 0.27))
        bezier6Path.addLine(to: CGPoint(x: 35.16, y: 0.27))
        bezier6Path.addLine(to: CGPoint(x: 35.16, y: 1))
        bezier6Path.close()
        fillColor19.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 44.88, y: 3.41))
        bezier7Path.addCurve(to: CGPoint(x: 42.31, y: 6), controlPoint1: CGPoint(x: 44.88, y: 4.89), controlPoint2: CGPoint(x: 43.77, y: 6))
        bezier7Path.addCurve(to: CGPoint(x: 39.77, y: 3.45), controlPoint1: CGPoint(x: 40.89, y: 6), controlPoint2: CGPoint(x: 39.77, y: 4.88))
        bezier7Path.addCurve(to: CGPoint(x: 42.31, y: 0.84), controlPoint1: CGPoint(x: 39.77, y: 1.82), controlPoint2: CGPoint(x: 41.06, y: 0.84))
        bezier7Path.addCurve(to: CGPoint(x: 44.88, y: 3.41), controlPoint1: CGPoint(x: 43.57, y: 0.84), controlPoint2: CGPoint(x: 44.88, y: 1.8))
        bezier7Path.close()
        bezier7Path.move(to: CGPoint(x: 42.28, y: 0.11))
        bezier7Path.addCurve(to: CGPoint(x: 39, y: 3.45), controlPoint1: CGPoint(x: 40.44, y: 0.11), controlPoint2: CGPoint(x: 39, y: 1.58))
        bezier7Path.addCurve(to: CGPoint(x: 42.33, y: 6.73), controlPoint1: CGPoint(x: 39, y: 5.29), controlPoint2: CGPoint(x: 40.46, y: 6.73))
        bezier7Path.addCurve(to: CGPoint(x: 45.65, y: 3.42), controlPoint1: CGPoint(x: 44.19, y: 6.73), controlPoint2: CGPoint(x: 45.65, y: 5.28))
        bezier7Path.addCurve(to: CGPoint(x: 42.28, y: 0.11), controlPoint1: CGPoint(x: 45.65, y: 1.53), controlPoint2: CGPoint(x: 44.2, y: 0.11))
        bezier7Path.close()
        fillColor19.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 50.83, y: 4.9))
        bezier8Path.addLine(to: CGPoint(x: 46.84, y: 0.29))
        bezier8Path.addLine(to: CGPoint(x: 46.82, y: 0.27))
        bezier8Path.addLine(to: CGPoint(x: 46.6, y: 0.27))
        bezier8Path.addLine(to: CGPoint(x: 46.6, y: 6.58))
        bezier8Path.addLine(to: CGPoint(x: 47.35, y: 6.58))
        bezier8Path.addLine(to: CGPoint(x: 47.35, y: 2.01))
        bezier8Path.addLine(to: CGPoint(x: 51.35, y: 6.58))
        bezier8Path.addLine(to: CGPoint(x: 51.58, y: 6.58))
        bezier8Path.addLine(to: CGPoint(x: 51.58, y: 0.27))
        bezier8Path.addLine(to: CGPoint(x: 50.83, y: 0.27))
        bezier8Path.addLine(to: CGPoint(x: 50.83, y: 4.9))
        bezier8Path.close()
        fillColor19.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 56.63, y: 1))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 0.27))
        bezier9Path.addLine(to: CGPoint(x: 52.97, y: 0.27))
        bezier9Path.addLine(to: CGPoint(x: 52.97, y: 6.58))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 6.58))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 5.85))
        bezier9Path.addLine(to: CGPoint(x: 53.71, y: 5.85))
        bezier9Path.addLine(to: CGPoint(x: 53.71, y: 3.54))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 3.54))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 2.81))
        bezier9Path.addLine(to: CGPoint(x: 53.71, y: 2.81))
        bezier9Path.addLine(to: CGPoint(x: 53.71, y: 1))
        bezier9Path.addLine(to: CGPoint(x: 56.63, y: 1))
        bezier9Path.close()
        fillColor19.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 0.86, y: 8.87))
        bezier10Path.addLine(to: CGPoint(x: 0.86, y: 9.54))
        bezier10Path.addCurve(to: CGPoint(x: 1.19, y: 9.54), controlPoint1: CGPoint(x: 0.97, y: 9.54), controlPoint2: CGPoint(x: 1.09, y: 9.54))
        bezier10Path.addCurve(to: CGPoint(x: 1.58, y: 9.46), controlPoint1: CGPoint(x: 1.36, y: 9.54), controlPoint2: CGPoint(x: 1.49, y: 9.53))
        bezier10Path.addCurve(to: CGPoint(x: 1.69, y: 9.2), controlPoint1: CGPoint(x: 1.65, y: 9.4), controlPoint2: CGPoint(x: 1.69, y: 9.3))
        bezier10Path.addCurve(to: CGPoint(x: 1.57, y: 8.94), controlPoint1: CGPoint(x: 1.69, y: 9.1), controlPoint2: CGPoint(x: 1.65, y: 9))
        bezier10Path.addCurve(to: CGPoint(x: 1.21, y: 8.87), controlPoint1: CGPoint(x: 1.48, y: 8.88), controlPoint2: CGPoint(x: 1.36, y: 8.87))
        bezier10Path.addLine(to: CGPoint(x: 0.86, y: 8.87))
        bezier10Path.close()
        bezier10Path.move(to: CGPoint(x: 0.66, y: 8.68))
        bezier10Path.addLine(to: CGPoint(x: 1.12, y: 8.68))
        bezier10Path.addCurve(to: CGPoint(x: 1.58, y: 8.72), controlPoint1: CGPoint(x: 1.33, y: 8.68), controlPoint2: CGPoint(x: 1.48, y: 8.69))
        bezier10Path.addCurve(to: CGPoint(x: 1.9, y: 9.2), controlPoint1: CGPoint(x: 1.78, y: 8.8), controlPoint2: CGPoint(x: 1.9, y: 8.98))
        bezier10Path.addCurve(to: CGPoint(x: 1.67, y: 9.63), controlPoint1: CGPoint(x: 1.9, y: 9.39), controlPoint2: CGPoint(x: 1.81, y: 9.54))
        bezier10Path.addCurve(to: CGPoint(x: 1.06, y: 9.73), controlPoint1: CGPoint(x: 1.53, y: 9.72), controlPoint2: CGPoint(x: 1.33, y: 9.73))
        bezier10Path.addLine(to: CGPoint(x: 0.86, y: 9.73))
        bezier10Path.addLine(to: CGPoint(x: 0.86, y: 10.65))
        bezier10Path.addLine(to: CGPoint(x: 0.66, y: 10.65))
        bezier10Path.addLine(to: CGPoint(x: 0.66, y: 8.68))
        bezier10Path.close()
        fillColor19.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 7.07, y: 8.87))
        bezier11Path.addLine(to: CGPoint(x: 7.07, y: 9.54))
        bezier11Path.addCurve(to: CGPoint(x: 7.39, y: 9.54), controlPoint1: CGPoint(x: 7.18, y: 9.54), controlPoint2: CGPoint(x: 7.29, y: 9.54))
        bezier11Path.addCurve(to: CGPoint(x: 7.78, y: 9.46), controlPoint1: CGPoint(x: 7.56, y: 9.54), controlPoint2: CGPoint(x: 7.7, y: 9.52))
        bezier11Path.addCurve(to: CGPoint(x: 7.9, y: 9.2), controlPoint1: CGPoint(x: 7.85, y: 9.4), controlPoint2: CGPoint(x: 7.9, y: 9.3))
        bezier11Path.addCurve(to: CGPoint(x: 7.47, y: 8.87), controlPoint1: CGPoint(x: 7.9, y: 9.01), controlPoint2: CGPoint(x: 7.77, y: 8.87))
        bezier11Path.addLine(to: CGPoint(x: 7.07, y: 8.87))
        bezier11Path.close()
        bezier11Path.move(to: CGPoint(x: 6.87, y: 8.68))
        bezier11Path.addLine(to: CGPoint(x: 7.32, y: 8.68))
        bezier11Path.addCurve(to: CGPoint(x: 7.78, y: 8.72), controlPoint1: CGPoint(x: 7.53, y: 8.68), controlPoint2: CGPoint(x: 7.69, y: 8.69))
        bezier11Path.addCurve(to: CGPoint(x: 8.11, y: 9.2), controlPoint1: CGPoint(x: 7.98, y: 8.8), controlPoint2: CGPoint(x: 8.11, y: 8.98))
        bezier11Path.addCurve(to: CGPoint(x: 8.05, y: 9.45), controlPoint1: CGPoint(x: 8.11, y: 9.3), controlPoint2: CGPoint(x: 8.09, y: 9.36))
        bezier11Path.addCurve(to: CGPoint(x: 7.42, y: 9.73), controlPoint1: CGPoint(x: 7.95, y: 9.65), controlPoint2: CGPoint(x: 7.75, y: 9.73))
        bezier11Path.addLine(to: CGPoint(x: 8.13, y: 10.65))
        bezier11Path.addLine(to: CGPoint(x: 7.89, y: 10.65))
        bezier11Path.addLine(to: CGPoint(x: 7.18, y: 9.73))
        bezier11Path.addLine(to: CGPoint(x: 7.07, y: 9.73))
        bezier11Path.addLine(to: CGPoint(x: 7.07, y: 10.65))
        bezier11Path.addLine(to: CGPoint(x: 6.87, y: 10.65))
        bezier11Path.addLine(to: CGPoint(x: 6.87, y: 8.68))
        bezier11Path.close()
        fillColor19.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 13.21, y: 9.67))
        bezier12Path.addCurve(to: CGPoint(x: 14.05, y: 10.51), controlPoint1: CGPoint(x: 13.21, y: 10.16), controlPoint2: CGPoint(x: 13.6, y: 10.51))
        bezier12Path.addCurve(to: CGPoint(x: 14.88, y: 9.66), controlPoint1: CGPoint(x: 14.51, y: 10.51), controlPoint2: CGPoint(x: 14.88, y: 10.15))
        bezier12Path.addCurve(to: CGPoint(x: 14.05, y: 8.82), controlPoint1: CGPoint(x: 14.88, y: 9.16), controlPoint2: CGPoint(x: 14.48, y: 8.82))
        bezier12Path.addCurve(to: CGPoint(x: 13.21, y: 9.67), controlPoint1: CGPoint(x: 13.61, y: 8.82), controlPoint2: CGPoint(x: 13.21, y: 9.16))
        bezier12Path.close()
        bezier12Path.move(to: CGPoint(x: 15.09, y: 9.66))
        bezier12Path.addCurve(to: CGPoint(x: 14.05, y: 10.7), controlPoint1: CGPoint(x: 15.09, y: 10.24), controlPoint2: CGPoint(x: 14.64, y: 10.7))
        bezier12Path.addCurve(to: CGPoint(x: 13.01, y: 9.67), controlPoint1: CGPoint(x: 13.44, y: 10.7), controlPoint2: CGPoint(x: 13.01, y: 10.22))
        bezier12Path.addCurve(to: CGPoint(x: 14.03, y: 8.63), controlPoint1: CGPoint(x: 13.01, y: 9.08), controlPoint2: CGPoint(x: 13.46, y: 8.63))
        bezier12Path.addCurve(to: CGPoint(x: 15.09, y: 9.66), controlPoint1: CGPoint(x: 14.63, y: 8.63), controlPoint2: CGPoint(x: 15.09, y: 9.07))
        bezier12Path.close()
        fillColor19.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 20.25, y: 8.87))
        bezier13Path.addLine(to: CGPoint(x: 20.25, y: 9.54))
        bezier13Path.addCurve(to: CGPoint(x: 20.57, y: 9.54), controlPoint1: CGPoint(x: 20.36, y: 9.54), controlPoint2: CGPoint(x: 20.47, y: 9.54))
        bezier13Path.addCurve(to: CGPoint(x: 20.96, y: 9.46), controlPoint1: CGPoint(x: 20.74, y: 9.54), controlPoint2: CGPoint(x: 20.88, y: 9.53))
        bezier13Path.addCurve(to: CGPoint(x: 21.08, y: 9.2), controlPoint1: CGPoint(x: 21.03, y: 9.4), controlPoint2: CGPoint(x: 21.08, y: 9.3))
        bezier13Path.addCurve(to: CGPoint(x: 20.96, y: 8.94), controlPoint1: CGPoint(x: 21.08, y: 9.1), controlPoint2: CGPoint(x: 21.03, y: 9))
        bezier13Path.addCurve(to: CGPoint(x: 20.6, y: 8.87), controlPoint1: CGPoint(x: 20.87, y: 8.88), controlPoint2: CGPoint(x: 20.75, y: 8.87))
        bezier13Path.addLine(to: CGPoint(x: 20.25, y: 8.87))
        bezier13Path.close()
        bezier13Path.move(to: CGPoint(x: 20.05, y: 8.68))
        bezier13Path.addLine(to: CGPoint(x: 20.51, y: 8.68))
        bezier13Path.addCurve(to: CGPoint(x: 20.96, y: 8.72), controlPoint1: CGPoint(x: 20.71, y: 8.68), controlPoint2: CGPoint(x: 20.87, y: 8.69))
        bezier13Path.addCurve(to: CGPoint(x: 21.29, y: 9.2), controlPoint1: CGPoint(x: 21.16, y: 8.8), controlPoint2: CGPoint(x: 21.29, y: 8.98))
        bezier13Path.addCurve(to: CGPoint(x: 21.06, y: 9.63), controlPoint1: CGPoint(x: 21.29, y: 9.39), controlPoint2: CGPoint(x: 21.2, y: 9.54))
        bezier13Path.addCurve(to: CGPoint(x: 20.44, y: 9.73), controlPoint1: CGPoint(x: 20.92, y: 9.72), controlPoint2: CGPoint(x: 20.71, y: 9.73))
        bezier13Path.addLine(to: CGPoint(x: 20.25, y: 9.73))
        bezier13Path.addLine(to: CGPoint(x: 20.25, y: 10.65))
        bezier13Path.addLine(to: CGPoint(x: 20.05, y: 10.65))
        bezier13Path.addLine(to: CGPoint(x: 20.05, y: 8.68))
        bezier13Path.close()
        fillColor19.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 26.25, y: 8.68))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 8.68))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 8.87))
        bezier14Path.addLine(to: CGPoint(x: 26.44, y: 8.87))
        bezier14Path.addLine(to: CGPoint(x: 26.44, y: 9.49))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 9.49))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 9.68))
        bezier14Path.addLine(to: CGPoint(x: 26.44, y: 9.68))
        bezier14Path.addLine(to: CGPoint(x: 26.44, y: 10.46))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 10.46))
        bezier14Path.addLine(to: CGPoint(x: 27.37, y: 10.65))
        bezier14Path.addLine(to: CGPoint(x: 26.25, y: 10.65))
        bezier14Path.addLine(to: CGPoint(x: 26.25, y: 8.68))
        bezier14Path.close()
        fillColor19.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 32.49, y: 8.87))
        bezier15Path.addLine(to: CGPoint(x: 32.49, y: 9.54))
        bezier15Path.addCurve(to: CGPoint(x: 32.82, y: 9.54), controlPoint1: CGPoint(x: 32.6, y: 9.54), controlPoint2: CGPoint(x: 32.71, y: 9.54))
        bezier15Path.addCurve(to: CGPoint(x: 33.21, y: 9.46), controlPoint1: CGPoint(x: 32.99, y: 9.54), controlPoint2: CGPoint(x: 33.12, y: 9.52))
        bezier15Path.addCurve(to: CGPoint(x: 33.32, y: 9.2), controlPoint1: CGPoint(x: 33.28, y: 9.4), controlPoint2: CGPoint(x: 33.32, y: 9.3))
        bezier15Path.addCurve(to: CGPoint(x: 32.9, y: 8.87), controlPoint1: CGPoint(x: 33.32, y: 9.01), controlPoint2: CGPoint(x: 33.19, y: 8.87))
        bezier15Path.addLine(to: CGPoint(x: 32.49, y: 8.87))
        bezier15Path.close()
        bezier15Path.move(to: CGPoint(x: 32.29, y: 8.68))
        bezier15Path.addLine(to: CGPoint(x: 32.75, y: 8.68))
        bezier15Path.addCurve(to: CGPoint(x: 33.21, y: 8.72), controlPoint1: CGPoint(x: 32.95, y: 8.68), controlPoint2: CGPoint(x: 33.11, y: 8.69))
        bezier15Path.addCurve(to: CGPoint(x: 33.53, y: 9.2), controlPoint1: CGPoint(x: 33.41, y: 8.8), controlPoint2: CGPoint(x: 33.53, y: 8.98))
        bezier15Path.addCurve(to: CGPoint(x: 33.47, y: 9.45), controlPoint1: CGPoint(x: 33.53, y: 9.3), controlPoint2: CGPoint(x: 33.52, y: 9.36))
        bezier15Path.addCurve(to: CGPoint(x: 32.85, y: 9.73), controlPoint1: CGPoint(x: 33.37, y: 9.65), controlPoint2: CGPoint(x: 33.17, y: 9.73))
        bezier15Path.addLine(to: CGPoint(x: 33.56, y: 10.65))
        bezier15Path.addLine(to: CGPoint(x: 33.31, y: 10.65))
        bezier15Path.addLine(to: CGPoint(x: 32.6, y: 9.73))
        bezier15Path.addLine(to: CGPoint(x: 32.49, y: 9.73))
        bezier15Path.addLine(to: CGPoint(x: 32.49, y: 10.65))
        bezier15Path.addLine(to: CGPoint(x: 32.29, y: 10.65))
        bezier15Path.addLine(to: CGPoint(x: 32.29, y: 8.68))
        bezier15Path.close()
        fillColor19.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 38.34, y: 8.87))
        bezier16Path.addLine(to: CGPoint(x: 38.34, y: 8.68))
        bezier16Path.addLine(to: CGPoint(x: 39.42, y: 8.68))
        bezier16Path.addLine(to: CGPoint(x: 39.42, y: 8.87))
        bezier16Path.addLine(to: CGPoint(x: 38.98, y: 8.87))
        bezier16Path.addLine(to: CGPoint(x: 38.98, y: 10.65))
        bezier16Path.addLine(to: CGPoint(x: 38.78, y: 10.65))
        bezier16Path.addLine(to: CGPoint(x: 38.78, y: 8.87))
        bezier16Path.addLine(to: CGPoint(x: 38.34, y: 8.87))
        bezier16Path.close()
        fillColor19.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 44.24, y: 8.68))
        bezier17Path.addLine(to: CGPoint(x: 44.44, y: 8.68))
        bezier17Path.addLine(to: CGPoint(x: 44.44, y: 10.65))
        bezier17Path.addLine(to: CGPoint(x: 44.24, y: 10.65))
        bezier17Path.addLine(to: CGPoint(x: 44.24, y: 8.68))
        bezier17Path.close()
        fillColor19.setFill()
        bezier17Path.fill()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 49.46, y: 8.68))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 8.68))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 8.87))
        bezier18Path.addLine(to: CGPoint(x: 49.66, y: 8.87))
        bezier18Path.addLine(to: CGPoint(x: 49.66, y: 9.49))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 9.49))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 9.68))
        bezier18Path.addLine(to: CGPoint(x: 49.66, y: 9.68))
        bezier18Path.addLine(to: CGPoint(x: 49.66, y: 10.46))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 10.46))
        bezier18Path.addLine(to: CGPoint(x: 50.59, y: 10.65))
        bezier18Path.addLine(to: CGPoint(x: 49.46, y: 10.65))
        bezier18Path.addLine(to: CGPoint(x: 49.46, y: 8.68))
        bezier18Path.close()
        fillColor19.setFill()
        bezier18Path.fill()


        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 56.26, y: 9.07))
        bezier19Path.addCurve(to: CGPoint(x: 55.89, y: 8.83), controlPoint1: CGPoint(x: 56.15, y: 8.93), controlPoint2: CGPoint(x: 56.06, y: 8.83))
        bezier19Path.addCurve(to: CGPoint(x: 55.63, y: 9.08), controlPoint1: CGPoint(x: 55.72, y: 8.83), controlPoint2: CGPoint(x: 55.63, y: 8.95))
        bezier19Path.addCurve(to: CGPoint(x: 55.8, y: 9.38), controlPoint1: CGPoint(x: 55.63, y: 9.19), controlPoint2: CGPoint(x: 55.69, y: 9.3))
        bezier19Path.addCurve(to: CGPoint(x: 56.45, y: 10.17), controlPoint1: CGPoint(x: 56.18, y: 9.66), controlPoint2: CGPoint(x: 56.45, y: 9.85))
        bezier19Path.addCurve(to: CGPoint(x: 55.89, y: 10.7), controlPoint1: CGPoint(x: 56.45, y: 10.45), controlPoint2: CGPoint(x: 56.21, y: 10.7))
        bezier19Path.addCurve(to: CGPoint(x: 55.3, y: 10.28), controlPoint1: CGPoint(x: 55.62, y: 10.7), controlPoint2: CGPoint(x: 55.44, y: 10.55))
        bezier19Path.addLine(to: CGPoint(x: 55.46, y: 10.18))
        bezier19Path.addCurve(to: CGPoint(x: 55.88, y: 10.51), controlPoint1: CGPoint(x: 55.58, y: 10.4), controlPoint2: CGPoint(x: 55.72, y: 10.51))
        bezier19Path.addCurve(to: CGPoint(x: 56.24, y: 10.17), controlPoint1: CGPoint(x: 56.08, y: 10.51), controlPoint2: CGPoint(x: 56.24, y: 10.36))
        bezier19Path.addCurve(to: CGPoint(x: 55.59, y: 9.47), controlPoint1: CGPoint(x: 56.24, y: 9.95), controlPoint2: CGPoint(x: 56.04, y: 9.83))
        bezier19Path.addCurve(to: CGPoint(x: 55.42, y: 9.09), controlPoint1: CGPoint(x: 55.5, y: 9.39), controlPoint2: CGPoint(x: 55.42, y: 9.24))
        bezier19Path.addCurve(to: CGPoint(x: 55.9, y: 8.63), controlPoint1: CGPoint(x: 55.42, y: 8.82), controlPoint2: CGPoint(x: 55.63, y: 8.63))
        bezier19Path.addCurve(to: CGPoint(x: 56.42, y: 8.95), controlPoint1: CGPoint(x: 56.14, y: 8.63), controlPoint2: CGPoint(x: 56.29, y: 8.77))
        bezier19Path.addLine(to: CGPoint(x: 56.26, y: 9.07))
        bezier19Path.close()
        fillColor19.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 1, y: 6.17))
        bezier20Path.addLine(to: CGPoint(x: 0.38, y: 6.17))
        bezier20Path.addLine(to: CGPoint(x: 0.38, y: 1.9))
        bezier20Path.addLine(to: CGPoint(x: 1, y: 1.52))
        bezier20Path.addLine(to: CGPoint(x: 1, y: 6.17))
        bezier20Path.close()
        fillColor19.setFill()
        bezier20Path.fill()


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 4.53, y: 6.53))
        bezier21Path.addLine(to: CGPoint(x: 5.15, y: 6.53))
        bezier21Path.addLine(to: CGPoint(x: 5.15, y: 0.41))
        bezier21Path.addLine(to: CGPoint(x: 4.53, y: 0.81))
        bezier21Path.addLine(to: CGPoint(x: 4.53, y: 6.53))
        bezier21Path.close()
        fillColor19.setFill()
        bezier21Path.fill()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 0.37, y: 6.52))
        bezier22Path.addLine(to: CGPoint(x: 1, y: 6.52))
        bezier22Path.addLine(to: CGPoint(x: 1, y: 2.72))
        bezier22Path.addLine(to: CGPoint(x: 0.37, y: 2.72))
        bezier22Path.addLine(to: CGPoint(x: 0.37, y: 6.52))
        bezier22Path.close()
        fillColor19.setFill()
        bezier22Path.fill()


        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 0.4, y: 3.44))
        bezier23Path.addLine(to: CGPoint(x: 0.4, y: 4.06))
        bezier23Path.addLine(to: CGPoint(x: 5.13, y: 1.05))
        bezier23Path.addLine(to: CGPoint(x: 5.13, y: 0.42))
        bezier23Path.addLine(to: CGPoint(x: 0.4, y: 3.44))
        bezier23Path.close()
        fillColor19.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 0.4, y: 5.89))
        bezier24Path.addLine(to: CGPoint(x: 0.4, y: 6.52))
        bezier24Path.addLine(to: CGPoint(x: 5.13, y: 6.53))
        bezier24Path.addLine(to: CGPoint(x: 5.13, y: 5.91))
        bezier24Path.addLine(to: CGPoint(x: 0.4, y: 5.89))
        bezier24Path.close()
        fillColor19.setFill()
        bezier24Path.fill()


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 6.51, y: 6.53))
        bezier25Path.addLine(to: CGPoint(x: 5.88, y: 6.53))
        bezier25Path.addLine(to: CGPoint(x: 5.88, y: 0.41))
        bezier25Path.addLine(to: CGPoint(x: 6.51, y: 0.81))
        bezier25Path.addLine(to: CGPoint(x: 6.51, y: 6.53))
        bezier25Path.close()
        fillColor19.setFill()
        bezier25Path.fill()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 10.66, y: 6.52))
        bezier26Path.addLine(to: CGPoint(x: 10.04, y: 6.52))
        bezier26Path.addLine(to: CGPoint(x: 10.04, y: 3.46))
        bezier26Path.addLine(to: CGPoint(x: 10.66, y: 3.46))
        bezier26Path.addLine(to: CGPoint(x: 10.66, y: 6.52))
        bezier26Path.close()
        fillColor19.setFill()
        bezier26Path.fill()


        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 10.64, y: 3.44))
        bezier27Path.addLine(to: CGPoint(x: 10.64, y: 4.06))
        bezier27Path.addLine(to: CGPoint(x: 5.91, y: 1.05))
        bezier27Path.addLine(to: CGPoint(x: 5.91, y: 0.42))
        bezier27Path.addLine(to: CGPoint(x: 10.64, y: 3.44))
        bezier27Path.close()
        fillColor19.setFill()
        bezier27Path.fill()


        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 10.64, y: 5.89))
        bezier28Path.addLine(to: CGPoint(x: 10.66, y: 6.52))
        bezier28Path.addLine(to: CGPoint(x: 5.93, y: 6.53))
        bezier28Path.addLine(to: CGPoint(x: 5.91, y: 5.91))
        bezier28Path.addLine(to: CGPoint(x: 10.64, y: 5.89))
        bezier28Path.close()
        fillColor19.setFill()
        bezier28Path.fill()


        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 6.5, y: 7.6))
        bezier29Path.addLine(to: CGPoint(x: 5.87, y: 7.6))
        bezier29Path.addLine(to: CGPoint(x: 5.87, y: 3.46))
        bezier29Path.addLine(to: CGPoint(x: 6.5, y: 3.46))
        bezier29Path.addLine(to: CGPoint(x: 6.5, y: 7.6))
        bezier29Path.close()
        fillColor19.setFill()
        bezier29Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(SparklePaintCodeResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
